

Setting.objects.all()

1 ['DoesNotExist', 'MultipleObjectsReturned', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__setstate__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_check_column_name_clashes', '_check_field_name_clashes', '_check_fields', '_check_id_field', '_check_index_together', '_check_local_fields', '_check_long_column_names', '_check_m2m_through_same_relationship', '_check_managers', '_check_model', '_check_model_name_db_lookup_clashes', '_check_ordering', '_check_swappable', '_check_unique_together', '_do_insert', '_do_update', '_get_FIELD_display', '_get_next_or_previous_by_FIELD', '_get_next_or_previous_in_order', '_get_pk_val', '_get_unique_checks', '_meta', '_perform_date_checks',
'_perform_unique_checks', '_save_parents', '_save_table', '_set_pk_val', '_state', 'check', 'clean', 'clean_fields', 'controller_name', 'date_error_message', 'delete', 'from_db', 'full_clean', 'get_deferred_fields', 'id', 'label', 'objects', 'pk', 'prepare_database_save', 'refresh_from_db', 'save', 'save_base', 'serializable_value', 'unique_error_message', 'validate_unique', 'value']



11 ['__class__', '__deepcopy__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__slotnames__', '__str__', '__subclasshook__', '__weakref__', 'bound_data', 'clean', 'default_error_messages', 'default_validators', 'disabled', 'empty_values', 'error_messages', 'get_bound_field', 'has_changed', 'help_text', 'hidden_widget', 'initial', 'label', 'label_suffix', 'localize', 'prepare_value', 'required', 'run_validators', 'show_hidden_initial', 'to_python', 'validate', 'validators', 'widget', 'widget_attrs']


form_class.base_fields





111 <class 'coursera_house.core.form.ControllerForm'> ['__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__html__', '__init__', '__init_subclass__', '__iter__', '__le__', '__lt__', '__module__', '__ne__', '__new__',
'__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_clean_fields', '_clean_form', '_html_output', '_post_clean', 'add_error', 'add_initial_prefix', 'add_prefix', 'as_p', 'as_table', 'as_ul', 'base_fields', 'changed_data', 'clean', 'declared_fields', 'default_renderer', 'errors', 'field_order', 'full_clean', 'get_initial_for_field', 'has_changed', 'has_error', 'hidden_fields', 'is_multipart', 'is_valid', 'media', 'non_field_errors', 'order_fields', 'prefix', 'use_required_attribute', 'visible_fields']


{'form': <ControllerForm bound=False, valid=Unknown, fields=(bedroom_target_temperature;hot_water_target_temperature;bedroom_light;bathroom_light)>, 'view': <coursera_house.core.views.ControllerView object at 0x000000000463BF10>}




Email: mlapin@rambler.ru
Access token: ce7b25df7e3b6b62379be94ebd6918190ad4544222b4de39cb963fb2162e5e6f
Для выполнения HTTP запросы в документации будем использовать утилиту cURL
Документация по cURL
Как установить cURL в windows?
Как установить cURL в Ubuntu?
Auth.current - метод получения текущего пользователя
curl -X \
GET http://smarthome.webpython.graders.eldf.ru/api/auth.current \
-H 'Authorization: Bearer ce7b25df7e3b6b62379be94ebd6918190ad4544222b4de39cb963fb2162e5e6f'
{"status":"ok","data":{"access_token":"...","email":"...","first_name":"...","last_name":"..."}}
User.controller - метод получения состояния всех контроллеров
curl -X \
GET http://smarthome.webpython.graders.eldf.ru/api/user.controller \
-H 'Authorization: Bearer ce7b25df7e3b6b62379be94ebd6918190ad4544222b4de39cb963fb2162e5e6f'
{"status":"ok","data":[{"value":false,"name":"..."},{"value":"...","name":"..."},{"value":100500,"name":"..."}]}
User.controller - метод сохранения состояния контроллеров
curl -X POST \
http://smarthome.webpython.graders.eldf.ru/api/user.controller \
-H 'Authorization: Bearer ce7b25df7e3b6b62379be94ebd6918190ad4544222b4de39cb963fb2162e5e6f' \
-d '{
  "controllers": [
    {
      "name": "air_conditioner",
      "value": true
    },
    {
      "name": "bedroom_light",
      "value": true
    }
  ]
}'
Доступные контроллеры:
air_conditioner - Кондиционер. Доступные значения (true, false)
bedroom_temperature - Температура в спальне. Доступные значения - целые числа
bedroom_light - Лампа в спальне. Доступные значения (true, false)
smoke_detector - Датчик задымления на потолке. Доступные значения (true, false)
bedroom_presence - Светодиод присутствия в спальне. Доступные значения (true, false)
bedroom_motion - Датчик движения в спальне. Доступные значения (true, false)
curtains - Занавески. Доступные значения: 
('open' - занавески открыты, 'slightly_open' - занавески приоткрыты, 'close' - занавески закрыты)
boiler - Бойлер. Доступные значения (true, false)
boiler_temperature - Температура в бойлер. Доступные значения - целые числа
cold_water - Кран холодной воды. Доступные значения (true, false)
hot_water - Кран горячей воды. Доступные значения (true, false)
bathroom_light - Лампа в ванной. Доступные значения (true, false)
bathroom_motion - Датчик движения в спальне. Доступные значения (true, false)
bathroom_presence - Светодиод присутствия в спальне. Доступные значения (true, false)
washing_machine - Стиральная машина. Доступные значения: 
('on' - включена, 'off' - выключена, 'broken' - сломана)
leak_detector - Датчик протечки. Доступные значения (true, false). Доступен только на чтение.
outdoor_light - Датчик освещенности за окном. Доступные значения (0 - 100). Доступен только на чтение.
{"status":"ok","data":[{"value":false,"name":"..."},{"value":"...","name":"..."},{"value":100500,"name":"..."}]}


---
http://smarthome.webpython.graders.eldf.ru/

pip install celery


https://django.fun/docs/celery/ru/5.1/getting-started/introduction/#what-s-a-task-queue


https://django.fun/docs/celery/ru/5.1/getting-started/backends-and-brokers/redis/#broker-redis
