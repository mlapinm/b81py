ul ['div', 'div', 'div', 'div', 'div', 'body', 'html', '[document]']
ul ['div', 'div', 'div', 'div', 'body', 'html', '[document]']
ul ['div', 'div', 'div', 'div', 'body', 'html', '[document]']
ul ['div', 'div', 'div', 'div', 'body', 'html', '[document]']
ul ['div', 'div', 'div', 'div', 'div', 'body', 'html', '[document]']
ul ['div', 'div', 'div', 'div', 'body', 'html', '[document]']
ul ['div', 'div', 'div', 'div', 'div', 'body', 'html', '[document]']
ul ['div', 'td', 'tr', 'table', 'div', 'div', 'div', 'div', 'div', 'body', 'html', '[document]']
ul ['div', 'div', 'div', 'div', 'body', 'html', '[document]']
ul ['div', 'div', 'div', 'div', 'body', 'html', '[document]']
ul ['div', 'div', 'div', 'body', 'html', '[document]']
ul ['div', 'div', 'div', 'div', 'body', 'html', '[document]']
ul ['div', 'div', 'div', 'div', 'div', 'body', 'html', '[document]']
ul ['div', 'div', 'div', 'div', 'body', 'html', '[document]']
ul ['div', 'div', 'div', 'div', 'div', 'body', 'html', '[document]']
ul ['div', 'div', 'div', 'div', 'body', 'html', '[document]']
ul ['div', 'div', 'div', 'div', 'body', 'html', '[document]']
ul ['div', 'div', 'div', 'div', 'body', 'html', '[document]']
ul ['div', 'div', 'div', 'div', 'body', 'html', '[document]']
ul ['div', 'div', 'div', 'div', 'body', 'html', '[document]']
ul ['div', 'div', 'div', 'div', 'body', 'html', '[document]']
ul ['div', 'body', 'html', '[document]']
ul ['div', 'body', 'html', '[document]']
ul ['div', 'body', 'html', '[document]']
ol ['div', 'div', 'div', 'div', 'div', 'body', 'html', '[document]']


---

1
<h2>Contents</h2>
Contents
2
<h2><span class="mw-headline" id="Chronology">Chronology</span></h2>
Chronology
3
<h2><span class="mw-headline" id="External_links">External links</span></h2>
External links
4
<h3><span class="mw-headline" id="End_of_the_Stone_Age">End of the Stone Age</span></h3>
End of the Stone Age
5
<h3><span class="mw-headline" id="Concept_of_the_Stone_Age">Concept of the Stone Age</span></h3>
Concept of the Stone Age
6
<h3><span class="mw-headline" id="Three-stage_system">Three-stage system</span></h3>
Three-stage system
7
<h3><span class="mw-headline" id="Three-age_chronology">Three-age chronology</span></h3>      
Three-age chronology
8
<h3><span class="mw-headline" id="Tools">Tools</span></h3>
Tools
9
<h3 id="p-tb-label">Tools</h3>
Tools
10
<h4><span id="Epipaleolithic.2FMesolithic"></span><span class="mw-headline" id="Epipaleolithic/Mesolithic">Epipaleolithic/Mesolithic</span></h4>
Epipaleolithic/Mesolithic
11
<h4><span id="Early_Stone_Age_.28ESA.29"></span><span class="mw-headline" id="Early_Stone_Age_(ESA)">Early Stone Age (ESA)</span></h4>
Early Stone Age (ESA)

[13, 11, None, None]

---
from bs4 import BeautifulSoup
import re
text = ''
FILE = 'Blacklist.html'
PATH = 'b81py/b31022bs/'
with open(PATH + FILE, encoding='utf-8') as f:
  text = f.read()
# print(text)
soup = BeautifulSoup(text, 'lxml')

imgs = soup('img')
imgs = [e for e in imgs if int(e['width']) >= 200]
len_imgs = len(imgs)
# print(imgs)
# print(len_imgs)

hh = soup('h1') + soup('h2') + soup('h3') + soup('h4') + soup('h5') + soup('h6')

k=0
hhs = ['h' + str(e) for e in range(1,7)]
hh = []
hs = []
for e in hhs:
  for e2 in soup(e):
    s2 = e2.string
    if s2:
      match = re.search(r'^[ETC]', s2.strip())
      if match:
        hs += [s2]
    pass

# print(hs)
# print(len(hs))

aa = soup('a')
kk = []
for e in aa:
  k = 0
  n = 0
  while e.find_next_sibling('a'):
    k += 1
    kk += [k]
    e = e.find_next_sibling('a')

# print(kk)
# print(max(kk))

ll = soup('ul')
ll += soup('ol')

k = 0
for e in ll:
  if e.find_parent('ul') or e.find_parent('ol'):
    k += 1
k = len(ll) - k
print(k)

def parse(path_to_file):    
    # Поместите ваш код здесь.
    # ВАЖНО!!!
    # При открытии файла, добавьте в функцию open необязательный параметр
    # encoding='utf-8', его отсутствие в коде будет вызвать падение вашего
    # решения на грейдере с ошибкой UnicodeDecodeError
    return [13, 10, 12, 40]
    # [imgs, headers, linkslen, lists]

if __name__ == '__main__':
    path_ = 'b81py/b31022bs/'
    file = 'wiki/Stone_Age'
    res = parse(path_ + file)
    print(res)

---