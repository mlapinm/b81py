Есть общедоступный репозиторий, вы должны клонировать его для локальной работы.

В проекте три ветки, в которых одновременно шла работа над разными алгоритмами шифрования: master, в которой лежит шифр Цезаря, и две ветки созданные от нее на разных стадиях работы, в которых лежит вариации шифра цезаря: rot13 и шифр Виженера. Вам нужно переключиться (checkout) в каждую из веток, посмотреть код и запустить тесты (python -m unittest -v), убедившись, что в каждой из веток тесты проходят.

Вам нужно вернуться в ветку master, создать от нее новую ветку dev и перейти туда.

В ветку dev вам нужно влить ветку с шифром rot13, с этим не должно возникнуть проблем, но не забудьте про ключ --no-ff.  С момента ответвления от master, в ветках изменялись только разные файлы, поэтому конфликтов при слиянии не будет. После слияния, в dev должны быть шифр Цезаря и rot13, тесты на них, и они должны проходить.

Теперь в ветку dev нужно влить ветку с шифром Виженера, не забудьте про ключ --no-ff. Эта ветка была ответвлена от master на раннем этапе работы над программой, и в ней оказался старый вариант кода, который потом правился и в ней и master параллельно, но по разному, поэтому будут конфликты слияния. К тому же код в этой ветке слегка устарел, так как в master был существенно унифицирован код как шифров, так и тестов. Это привело к тому, что шифры Цезаря и rot13 используют общую кодовую базу для тестов, а шифр Виженера нет. При решении конфликтов в cipher.py и test.py имейте в виду, что код, который у вас в dev новее и лучше, и все конфликтующие изменения нужно оставить именно из него, а из Виженера взять только классы Vigenere и TestVigenere (и то, последний придется потом переделать почти полностью).

Убрав все конфликтующие изменения, не спешите делать commit, чтобы завершить merge. Сначала вам нужно привести код шифра Виженера и его теста к новой кодовой базе. Т.е. сделать их максимально похожими на код шифра Цезаря: переименовать методы шифрации и дешифрации в encode и decode, использовать cls.get_char, if, cls.alpha (из 26 букв) и генератор списка, а в тестах наследоваться от TestCipherMixin. Учтите, что теперь ключ шифрования в шифре Виженера не может содержать пробел, уберите его из строки ключа в тестах, а вот строка для шифрации, наоборот, может содержать любые символы, а не только буквы (и последняя версия шифра Цезаря прилетевшая из ветки rot13 с этим справляется)

После всех исправлений завершите merge с помощью commit.

Последним шагом перейдите в ветку master и влейте в нее dev, не забудьте необходимые ключи merge. Проблем не должно возникнуть. Еще раз запустите тесты, их должно быть 6 и они должны пройти.

Папку с проектом целиком запакуйте в zip-архив и отправьте на проверку. На сервере проект будет распакован и с помощью git проверено, что ветки объединялись именно так, как описано. Затем будет проверено, что классы Caesar и Vigenere наследуются от Cipher (Rot13 может не наследоваться), методы шифрования у всех классов называются encode и decode и действительно реализуют нужные алгоритмы шифрования, и вызывают при этом cls.get_char. Будет проверено, что все 6 тестов проходят, наследуются от TestCipherMixin и unittest.TestCase и определяют только методы encode и decode (могут содержать еще константы и атрибуты). 
----
